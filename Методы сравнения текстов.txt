1. Метод Левенштейна (расстояние редактирования) - определяет минимальное количество операций вставки, удаления или замены символов, необходимых для превращения одного 
текста в другой.
2. Косинусное сходство - используется для определения сходства двух текстов путем вычисления косинуса угла между векторами, составленными из частоты слов в каждом тексте.
3. Jaccard similarity - определяет сходство двух текстов путем вычисления коэффициента Жаккара, который равен отношению количества общих слов в двух текстах к общему 
количеству слов в этих текстах.
4. SequenceMatcher - метод из модуля difflib, который сравнивает последовательности символов и выдает отчет о совпадении и различии символов в двух текстах.
5. Наивный Байесовский классификатор - используется для классификации текстов на основе вероятностной модели, которая определяет вероятность принадлежности текста 
к определенному классу на основе частоты встречаемости слов в этом классе.
6. TF-IDF - метод, который вычисляет важность слова в документе на основе его частоты встречаемости в этом документе и обратной частоты встречаемости во всех 
документах корпуса.
7. Latent Dirichlet Allocation (LDA) - метод тематического моделирования, который позволяет выявлять скрытые темы в текстовых данных и определять, какие слова 
связаны с каждой темой.
8. Word Embeddings - метод, который преобразует слова в векторы в многомерном пространстве, чтобы учитывать семантические отношения между словами при анализе 
текстовых данных.
9. Мера Браун-Бланке (B-B score) - это метрика оценки качества работы алгоритмов автоматической реферирования текстов. Она основана на сравнении полученного 
реферата с эталонным рефератом, составленным человеком.

В Python метрику B-B score можно вычислить с помощью библиотеки NLTK (Natural Language Toolkit). Для этого нужно импортировать модуль nltk.translate 
и использовать функцию bleu_score.corpus_bleu(), передав ей два списка - список предложений эталонного реферата и список предложений полученного реферата.
Пример использования:

```python
import nltk.translate.bleu_score as bleu_score

# эталонный реферат
reference = [['the', 'cat', 'is', 'on', 'the', 'mat']]

# полученный реферат
summary = ['the', 'cat', 'is', 'on', 'the', 'mat']

# вычисление B-B score
score = bleu_score.corpus_bleu(reference, [summary])

print(score)
```

В данном примере результатом будет значение B-B score, равное 1.0, так как полученный реферат полностью совпадает с эталонным. 
В общем случае значение B-B score может быть от 0 до 1, где 1 - это идеальное совпадение, а 0 - полное несовпадение.
